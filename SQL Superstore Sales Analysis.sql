use project;
-- Ques-1 What is the total sales revenue generated by the retail store?
SELECT SUM(Sales) AS Total_Sales, SUM(Profit) AS Total_Profit 
FROM Superstore;

-- Ques-2 How many orders were placed in total?
SELECT COUNT(DISTINCT `Order ID`) AS Total_Orders 
FROM superstore; -- 4931

-- QUE-4. Find the total sales by region.
select Region,round(sum(sales),2) as Total_Sales from superstore group by Region;

-- Ques-5. Find the top 5 most profitable products.

SELECT `Product Name`, SUM(Profit) AS Total_Profit 
FROM superstore 
GROUP BY `Product Name` 
ORDER BY Total_Profit DESC 
LIMIT 5;

-- Ques-6. Identify the region with the highest sales.

select Region,round(Sum(sales),2) as TotalSales from superstore group by region order by TotalSales limit 1;

-- Ques-7. Calculate the average discount offered by category.

select category,concat(round(100*avg(discount),0),"%") as AvgDiscount from superstore group by category order by Avgdiscount;
select category,avg(discount) as AvgDiscount from superstore group by category order by Avgdiscount;

-- Ques-8. List all the unique categories and sub-categories.

SELECT DISTINCT Category, `Sub-Category` 
FROM superstore;

-- Ques-9. Find the month with the highest sales.
-- converting the data type

SELECT `Order Date`
FROM superstore
WHERE STR_TO_DATE(`Order Date`, '%m/%d/%Y') IS NULL AND `Order Date` IS NOT NULL;

SELECT `Order Date`
FROM superstore
WHERE `Order Date` != LTRIM(RTRIM(`Order Date`));

ALTER TABLE superstore ADD COLUMN `Order Date Converted` DATE;
UPDATE superstore 
SET `Order Date Converted` = STR_TO_DATE(`Order Date`, '%m/%d/%Y');

SELECT `Order Date`, `Order Date Converted`
FROM superstore
WHERE `Order Date Converted` IS NULL;

ALTER TABLE superstore DROP COLUMN `Order Date`;
ALTER TABLE superstore CHANGE `Order Date Converted` `Order Date` DATE;

-- ANSWER
SELECT MONTH(`Order Date`) AS Order_Month, SUM(Sales) AS Total_Sales 
FROM superstore 
GROUP BY MONTH(`Order Date`) 
ORDER BY Total_Sales DESC 
LIMIT 1;

-- Ques-10 Find the top 3 cities by profit.

SELECT City, SUM(Profit) AS Total_Profit 
FROM superstore 
GROUP BY City 
ORDER BY Total_Profit DESC 
LIMIT 3;

-- Ques-11 Count the number of orders for each segment.

SELECT Segment, COUNT(DISTINCT `Order ID`) AS Order_Count 
FROM superstore 
GROUP BY Segment;

-- Ques-12 Find the total quantity sold for each sub-category.

SELECT `Sub-Category`, SUM(Quantity) AS Total_Quantity 
FROM superstore 
GROUP BY `Sub-Category`;

-- Ques-13. Retrieve orders with discounts greater than 50%.

SELECT * 
FROM superstore 
WHERE Discount > 0.5;

-- Ques-14. Find the total profit for each ship mode.

SELECT `Ship Mode`, SUM(Profit) AS Total_Profit 
FROM superstore 
GROUP BY `Ship Mode`;

-- Ques-15. Identify the product with the highest sales.

SELECT `Product Name`, SUM(Sales) AS Total_Sales 
FROM superstore 
GROUP BY `Product Name` 
ORDER BY Total_Sales DESC 
LIMIT 1;

-- Ques-16. Find the total number of products in each category.

SELECT Category, COUNT(DISTINCT `Product Name`) AS Product_Count 
FROM superstore 
GROUP BY Category;

-- Ques-17. Calculate the profit margin for each region.

SELECT Region, (SUM(Profit) / SUM(Sales)) * 100 AS Profit_Margin 
FROM superstore 
GROUP BY Region;

-- Ques-18. Retrieve orders where sales exceeded $1,000.

SELECT * 
FROM superstore 
WHERE Sales > 1000;

-- Ques-19. Find the first and last order dates in the dataset.

SELECT MIN(`Order Date`) AS First_Order, MAX(`Order Date`) AS Last_Order 
FROM superstore;

-- Ques-20. Find the average sales per order.

SELECT AVG(Sales) AS Avg_Sales_Per_Order 
FROM superstore;

-- Ques-21. Find total sales by month.

SELECT MONTH(`Order Date`) AS Order_Month, SUM(Sales) AS Total_Sales 
FROM superstore 
GROUP BY MONTH(`Order Date`);

-- Ques-22. Count orders by year.

SELECT YEAR(`Order Date`) AS Order_Year, COUNT(DISTINCT `Order ID`) AS Order_Count 
FROM superstore 
GROUP BY YEAR(`Order Date`);

-- Ques-23. Find the profit and sales ratio for each category.

SELECT Category, SUM(Profit) / SUM(Sales) AS Profit_Sales_Ratio 
FROM superstore 
GROUP BY Category;

-- Ques-24. Retrieve the orders shipped in the last month.

SELECT * 
FROM superstore 
WHERE `Ship Date` >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);

-- Ques-25. Identify customers who have made more than 5 orders.

SELECT `Customer ID`, COUNT(DISTINCT `Order ID`) AS Order_Count 
FROM superstore 
GROUP BY `Customer ID` 
HAVING Order_Count > 5;

-- Ques-26. Find the highest discount given on a single order.

SELECT MAX(Discount) AS Max_Discount 
FROM superstore;

-- Ques-27. Calculate total sales for each product category

SELECT Category, SUM(Sales) AS Total_Sales 
FROM superstore 
GROUP BY Category;

-- Ques-28. Retrieve all orders made by a specific customer (replace 'Customer_Name' with actual name).

SELECT * 
FROM superstore 
WHERE `Customer Name` = 'Customer_Name';

-- Ques-29. Find the average profit per order for each segment.

SELECT Segment, AVG(Profit) AS Avg_Profit_Per_Order 
FROM superstore 
GROUP BY Segment;

-- Ques-30 Identify the sales trend over the years.

SELECT YEAR(`Order Date`) AS Order_Year, SUM(Sales) AS Total_Sales 
FROM superstore 
GROUP BY YEAR(`Order Date`) 
ORDER BY Order_Year;